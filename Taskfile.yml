# https://taskfile.dev

version: '3'

vars:
  VERSION: 0.0.1
  APK_KEY: ""
  PKG: localpkg

tasks:
  default:
    cmds:
      - task -l
    silent: true

  boot:
    desc: boot builder
    cmds:
      - docker compose up -d

  boot:wait:
    desc: wait for builder
    cmds:
      - 'while true ; do docker compose top alpine | grep -q apk || exit 0 ; sleep 1 ; done'
      - 'while true ; do docker compose top ubuntu | grep -q apt || exit 0 ; sleep 1 ; done'
      - 'while true ; do docker compose top almalinux | grep -q dnf || exit 0 ; sleep 1 ; done'
      - 'while true ; do docker compose top archlinux | grep -q pacman || exit 0 ; sleep 1 ; done'

  shutdown:
    desc: shutdown builder
    cmds:
      - docker compose down -v

  pkg:tar:
    desc: build tarball
    cmds:
      - "python -m localpkg.main tar --zip --name {{.PKG}} --version {{.VERSION}} ."

  prepare:
    desc: prepare build
    cmds:
      - task: boot
      - task: pkg:tar
      - task: boot:wait
      - for: [ubuntu, alpine, almalinux, archlinux]
        cmd: "docker compose exec {{.ITEM}} tar xf /w/{{.PKG}}-{{.VERSION}}.tar.gz -C /tmp"

  pkg:deb:
    desc: build .deb package
    cmds:
      - "docker compose exec -w /w ubuntu /tmp/{{.PKG}}-{{.VERSION}}/usr/bin/localpkg deb --name {{.PKG}} --version {{.VERSION}} --zip ."

  pkg:rpm:
    desc: build .rpm package
    cmds:
      - "docker compose exec -w /w almalinux /tmp/{{.PKG}}-{{.VERSION}}/usr/bin/localpkg rpm --name {{.PKG}} --version {{.VERSION}} --zip ."

  pkg:apk:
    desc: build .apk package
    cmds:
      - "docker compose exec alpine install -c -o pkg -m 0600 /w/{{.APK_KEY}} /tmp/apk.rsa"
      - "docker compose exec alpine rm -rf /tmp/build"
      - "docker compose exec -w /w -u pkg alpine git clone . /tmp/build"
      - "docker compose exec -w /tmp/build -u pkg alpine /tmp/{{.PKG}}-{{.VERSION}}/usr/bin/localpkg apk --name {{.PKG}} --version {{.VERSION}} --key /tmp/apk.rsa --zip ."
      - "docker compose exec alpine sh -c 'cp /tmp/build/*.apk /w'"
    preconditions:
      - sh: "test -n '{{.APK_KEY}}'"
        msg: "APK_KEY variable is required"

  pkg:apk:key:
    desc: generate apk key
    cmds:
      - "openssl genrsa -out {{.APK_KEY}}"
      - "chmod 600 {{.APK_KEY}}"
    preconditions:
      - sh: "test -n '{{.APK_KEY}}'"
        msg: "APK_KEY variable is required"
      - sh: "test ! -f {{.APK_KEY}}"
        msg: "APK_KEY exists"

  pkg:pacman:
    desc: build pacman package
    cmds:
      - "docker compose exec archlinux install -c -o pkg -m 0600 /w/{{.APK_KEY}} /tmp/apk.rsa"
      - "docker compose exec archlinux rm -rf /tmp/build"
      - "docker compose exec -w /w -u pkg archlinux git clone . /tmp/build"
      - "docker compose exec -w /tmp/build -u pkg archlinux /tmp/{{.PKG}}-{{.VERSION}}/usr/bin/localpkg apk --name {{.PKG}} --version {{.VERSION}} --key /tmp/apk.rsa --zip ."
      - "docker compose exec archlinux sh -c 'cp /tmp/build/*.zst /w'"

  install:deb:
    desc: install .deb package
    cmds:
      - "docker compose exec ubuntu dpkg -i /w/{{.PKG}}_{{.VERSION}}_all.deb"

  install:rpm:
    desc: install .rpm package
    cmds:
      - "docker compose exec almalinux rpm -ivh /w/{{.PKG}}-{{.VERSION}}-1.noarch.rpm"

  install:apk:
    desc: install .apk package
    cmds:
      - "docker compose exec alpine apk add /w/{{.PKG}}-{{.VERSION}}-r1.apk --allow-untrusted"

  install:pacman:
    desc: install pacman package
    cmds:
      - "docker compose exec archlinux sh -c 'pacman -U --noconfirm /w/{{.PKG}}-{{.VERSION}}-1-*.pkg.tar.zst'"

  uninstall:deb:
    desc: uninstall .deb package
    cmds:
      - "docker compose exec ubuntu dpkg -r {{.PKG}}"

  uninstall:rpm:
    desc: uninstall .rpm package
    cmds:
      - "docker compose exec almalinux rpm -e {{.PKG}}"

  uninstall:apk:
    desc: uninstall .apk package
    cmds:
      - "docker compose exec alpine apk del {{.PKG}}"

  uninstall:pacman:
    desc: uninstall pacman package
    cmds:
      - "docker compose exec archlinux pacman -R --noconfirm {{.PKG}}"

  help:deb:
    desc: show help for .deb package
    cmds:
      - "docker compose exec ubuntu {{.PKG}} --help"

  help:rpm:
    desc: show help for .rpm package
    cmds:
      - "docker compose exec almalinux {{.PKG}} --help"

  help:apk:
    desc: show help for .apk package
    cmds:
      - "docker compose exec alpine {{.PKG}} --help"

  help:pacman:
    desc: show help for pacman package
    cmds:
      - "docker compose exec archlinux {{.PKG}} --help"

  version:deb:
    desc: show version for .deb package
    cmds:
      - "docker compose exec ubuntu {{.PKG}} --version"

  version:rpm:
    desc: show version for .rpm package
    cmds:
      - "docker compose exec almalinux {{.PKG}} --version"

  version:apk:
    desc: show version for .apk package
    cmds:
      - "docker compose exec alpine {{.PKG}} --version"

  version:pacman:
    desc: show version for pacman package
    cmds:
      - "docker compose exec archlinux {{.PKG}} --version"

  files:deb:
    desc: show files installed for .deb package
    cmds:
      - "docker compose exec ubuntu dpkg -L {{.PKG}}"

  files:rpm:
    desc: show files installed for .rpm package
    cmds:
      - "docker compose exec almalinux rpm -ql {{.PKG}}"

  files:apk:
    desc: show files installed for .apk package
    cmds:
      - "docker compose exec alpine apk info -L {{.PKG}}"

  files:pacman:
    desc: show files installed for pacman package
    cmds:
      - "docker compose exec archlinux pacman -Ql {{.PKG}}"

  pkg:all:
    desc: build all packages
    cmds:
      - task: pkg:deb
      - task: pkg:rpm
      - task: pkg:apk
      - task: pkg:pacman

  install:all:
    desc: install all packages
    cmds:
      - task: install:deb
      - task: install:rpm
      - task: install:apk
      - task: install:pacman

  uninstall:all:
    desc: uninstall all packages
    cmds:
      - task: uninstall:deb
      - task: uninstall:rpm
      - task: uninstall:apk
      - task: uninstall:pacman

  help:all:
    desc: show help for all packages
    cmds:
      - task: help:deb
      - task: help:rpm
      - task: help:apk
      - task: help:pacman

  version:all:
    desc: show version for all packages
    cmds:
      - task: version:deb
      - task: version:rpm
      - task: version:apk
      - task: version:pacman

  files:all:
    desc: show files installed for all packages
    cmds:
      - task: files:deb
      - task: files:rpm
      - task: files:apk
      - task: files:pacman
