# https://taskfile.dev

version: '3'

vars:
  VERSION: 0.0.1
  APK_KEY: ""

tasks:
  default:
    cmds:
      - task -l
    silent: true

  boot:
    desc: boot builder
    cmds:
      - docker compose up -d

  boot:wait:
    desc: wait for builder
    cmds:
      - 'while true ; do docker compose top alpine | grep -q apk || exit 0 ; sleep 1 ; done'
      - 'while true ; do docker compose top ubuntu | grep -q apt || exit 0 ; sleep 1 ; done'
      - 'while true ; do docker compose top almalinux | grep -q dnf || exit 0 ; sleep 1 ; done'

  shutdown:
    desc: shutdown builder
    cmds:
      - docker compose down -v

  pkg:tar:
    desc: build tarball
    cmds:
      - "python -m localpkg.main tar --zip --name localpkg --version {{.VERSION}} ."

  prepare:
    desc: prepare build
    cmds:
      - for: [ubuntu, alpine, almalinux]
        cmd: "docker compose exec {{.ITEM}} tar xf /w/localpkg-{{.VERSION}}.tar.gz -C /tmp"

  pkg:deb:
    desc: build .deb package
    cmds:
      - "docker compose exec -w /w ubuntu /tmp/localpkg-{{.VERSION}}/usr/bin/localpkg deb --name localpkg --version {{.VERSION}} --zip ."

  pkg:rpm:
    desc: build .rpm package
    cmds:
      - "docker compose exec -w /w almalinux /tmp/localpkg-{{.VERSION}}/usr/bin/localpkg rpm --name localpkg --version {{.VERSION}} --zip ."

  pkg:apk:
    desc: build .apk package
    cmds:
      - "docker compose exec -w /w -u pkg alpine /tmp/localpkg-{{.VERSION}}/usr/bin/localpkg apk --name localpkg --version {{.VERSION}} --key {{.APK_KEY}} --zip ."
    preconditions:
      - sh: "test -n '{{.APK_KEY}}'"
        msg: "APK_KEY variable is required"

  pkg:apk:key:
    desc: generate apk key
    cmds:
      - "openssl genrsa -out {{.APK_KEY}}"
      - "chmod 600 {{.APK_KEY}}"
    preconditions:
      - sh: "test -n '{{.APK_KEY}}'"
        msg: "APK_KEY variable is required"
      - sh: "test ! -f {{.APK_KEY}}"
        msg: "APK_KEY exists"

  install:deb:
    desc: install .deb package
    cmds:
      - "docker compose exec ubuntu dpkg -i /w/localpkg_{{.VERSION}}_all.deb"

  install:rpm:
    desc: install .rpm package
    cmds:
      - "docker compose exec almalinux rpm -ivh /w/localpkg-{{.VERSION}}-1.noarch.rpm"

  install:apk:
    desc: install .apk package
    cmds:
      - "docker compose exec alpine apk add /w/localpkg-{{.VERSION}}-r1.apk --allow-untrusted"

  uninstall:deb:
    desc: uninstall .deb package
    cmds:
      - "docker compose exec ubuntu dpkg -r localpkg"

  uninstall:rpm:
    desc: install .rpm package
    cmds:
      - "docker compose exec almalinux rpm -e localpkg"

  uninstall:apk:
    desc: install .apk package
    cmds:
      - "docker compose exec alpine apk del localpkg"

  help:deb:
    desc: show help for .deb package
    cmds:
      - "docker compose exec ubuntu localpkg --help"

  help:rpm:
    desc: show help for .rpm package
    cmds:
      - "docker compose exec almalinux localpkg --help"

  help:apk:
    desc: show help for .apk package
    cmds:
      - "docker compose exec alpine localpkg --help"

  version:deb:
    desc: show version for .deb package
    cmds:
      - "docker compose exec ubuntu localpkg --version"

  version:rpm:
    desc: show version for .rpm package
    cmds:
      - "docker compose exec almalinux localpkg --version"

  version:apk:
    desc: show version for .apk package
    cmds:
      - "docker compose exec alpine localpkg --version"

  pkg:all:
    desc: show help for all packages
    cmds:
      - task pkg:tar
      - task prepare
      - task pkg:deb
      - task pkg:rpm
      - task pkg:apk

  install:all:
    desc: show help for all packages
    cmds:
      - task install:deb
      - task install:rpm
      - task install:apk

  uninstall:all:
    desc: show help for all packages
    cmds:
      - task uninstall:deb
      - task uninstall:rpm
      - task uninstall:apk

  help:all:
    desc: show help for all packages
    cmds:
      - task help:deb
      - task help:rpm
      - task help:apk

  version:all:
    desc: show version for all packages
    cmds:
      - task version:deb
      - task version:rpm
      - task version:apk
